EZ.dropbox = function (){    var self=this    ,ID={         fileElem:EZ.id()        ,dropbox:EZ.id()        ,progress:EZ.id()        ,percents:EZ.id()        ,up_done:EZ.id()        ,complete_message:EZ.id()    }    ,opt     ,defaults = function(e){        e.stopPropagation();          e.preventDefault();      }    ,dragenter = function(e){        console.log('dragenter');        $(this).addClass("active");        defaults(e);    }    ,dragover = function(e){        console.log('dragover');        defaults(e);    }    ,dragleave = function(e){        console.log('dragleave');        $(this).removeClass("active");        defaults(e);    }      ,drop = function(e){        console.log('drop');        $(this).removeClass("active");        defaults(e);        // dataTransfer -> which holds information about the user interaction, including what files (if any) the user dropped on the element to which the event is bound.        //console.log(e);        var dt = e.dataTransfer;        var files = dt.files;        handleFiles(e,files);    }    ,handleFiles = function (e,files){        e = e || window.event;        var dom = e.target || e.srcElement;        files  =files || dom.files        // alert(files);        // Traverse throught all files and check if uploaded file type is image	        var imageType = /image.*/;          var file = files[0];        // check file type                if (!file.type.match(imageType)) {            //alert("File \""+file.name+"\" is not a valid image file, Are you trying to screw me :( :( ");          alert("錯誤 檔案 \""+file.name+"\" 並不是圖片檔案");          return false;	        }         // check file size        if (parseInt(file.size / 1024) > 20500) {            alert("File \""+file.name+"\" is too big. I am using shared server :P");          return false;	        }                 var info = '<div class="preview active-win"><div class="preview-image"><img ></div>';        info+='<div class="progress-holder"><span id="'+ID.progress+'" class="progress1"></span></div>';        info+='<span id="'+ID.percents+'" class="percents"></span>';        info+='<div style="float:left;">已上傳 <span id="'+ID.up_done+'" class="up-done"></span> KB of '+parseInt(file.size / 1024)+' KB</div>';        info+='<div id="'+ID.complete_message+'" class="complete_message"></div>';        $("#"+opt.progress).show("fast",function(){            $("#"+opt.progress).html(info);             uploadFile(file);        });    }    ,uploadFile = function(file){        // check if browser supports file reader object         if (typeof FileReader !== "undefined"){        //alert("uploading "+file.name);          var reader = new FileReader();        reader.onload = function(e){            //alert(e.target.result);            $('.preview img').attr('src',e.target.result).css("width","70px").css("height","70px");        }        reader.readAsDataURL(file);        var xhr = new XMLHttpRequest();        //xhr.open("post", g.nowpath + "ajax_fileupload.php", true);        xhr.open("post", opt.action, true);        xhr.upload.addEventListener("progress", function (e) {            //console.log('progress');            if (e.lengthComputable) {                $("#"+ID.progress).css("width",(e.loaded / e.total) * 100 + "%");                $('#'+ID.percents).html(" "+((e.loaded / e.total) * 100).toFixed() + "%");                $('#'+ID.up_done).html((parseInt(e.loaded / 1024)).toFixed(0));            }            else {                alert("Failed to compute file upload length");            }        }, false);                /*        xhr.upload.addEventListener("loadstart",function(e){            console.log('loadstart');        });                xhr.upload.addEventListener("load",function(e){            console.log('load');        });        */        xhr.onreadystatechange = function (e) {            if (xhr.readyState === 4) {            if (xhr.status === 200) {                $("#"+ID.progress).css("width","100%");                $('#'+ID.percents).html("100%");                $('#'+ID.up_done).html((parseInt(file.size / 1024)).toFixed(0));                                var response = xhr.response;                if(typeof opt.callback == 'function'){                    opt.callback.apply(this,[response,ID.complete_message]);                }            }else{                alert("Error"+ xhr.statusText);              }          }        };                // Set headers        //xhr.setRequestHeader("Content-Type", "multipart/form-data");        //xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");        xhr.setRequestHeader("Content-Type", file.type);        xhr.setRequestHeader("X-File-Name", encodeURIComponent(file.name));        xhr.setRequestHeader("X-File-Size", file.size);        xhr.setRequestHeader("X-File-Type", file.type);        //console.log(file);        // Send the file (doh)        xhr.send(file);        //xhr.send('a=1&b=2');        }else{            alert("Your browser doesnt support FileReader object");        }    }    ,Self={        render:function(p){            opt = p;            var dom;            console.log(p);            if(p.id){                dom = document.getElementById(p.id);                dom.addEventListener("dragenter", dragenter, false);                dom.addEventListener("dragleave", dragleave, false);                dom.addEventListener("dragover", dragover, false)                dom.addEventListener("drop", drop, false);            }                    }        ,handleFiles:handleFiles    }    return Self;}function handleFiles(files,video_id,fastvdo_id){    console.log('handleFiles');    var file=files[0];    // Traverse throught all files and check if uploaded file type is image	    var imageType = /image.*/;      // check file type    if (!file.type.match(imageType)) {        //alert("File \""+file.name+"\" is not a valid image file, Are you trying to screw me :( :( ");      //return false;    }     // check file size    if (parseInt(file.size / 1024) > 2050) {        //alert("File \""+file.name+"\" is too big. I am using shared server :P");      //return false;	    }     var info = '<div class="preview active-win"><div class="preview-image"><img ></div><div class="progress-holder"><span id="progress"></span></div><span class="percents"></span><div style="float:left;">Uploaded <span class="up-done"></span> KB of '+parseInt(file.size / 1024)+' KB</div>';        var dropbox_id = 'dropbox'+video_id;    var opt = {        url:'ajax_fileupload.php?video_id='+video_id+'&fastvdo_id='+fastvdo_id        ,onload:function(e){            console.log('onload');        }        ,progress:function(e){            console.log('progress');            if (e.lengthComputable) {                $("#"+dropbox_id+" div").css("width",(e.loaded / e.total) * 100 + "%");                var percent = ((e.loaded / e.total) * 100).toFixed() + "%";                var kb=(parseInt(e.loaded / 1024)).toFixed(0)+' KB';                $("#"+dropbox_id+" span").html(percent);            }            else {                alert("Failed to compute file upload length");            }        }        ,callback:function(e,file,response){            var r = {};            try{                r=eval('('+response+')');            }catch(e){                            }            $("#"+dropbox_id+" img").attr('src',r.response);            $("#"+dropbox_id+" img").css('display','inline-block');            $("#"+dropbox_id+" span").css('display','none');            $("#"+dropbox_id+" div").css('display','none');        }    };    var info='<div></div><span></span><img style="display:none;">';    $('#'+dropbox_id+'').html(info);    EZ.uploadfile(file,opt.url,opt.onload,opt.progress,opt.callback);}EZ.uploadfile = function(file,url,onload,progress,callback){    // check if browser supports file reader object     if (typeof FileReader !== "undefined"){    //alert("uploading "+file.name);      reader = new FileReader();    if(typeof onload=='function') reader.onload = onload;        reader.readAsDataURL(file);        xhr = new XMLHttpRequest();        xhr.open("post", url, true);        if(typeof progress=='function') xhr.upload.addEventListener("progress", progress,false)                xhr.onreadystatechange = function (e) {            if (xhr.readyState === 4) {              if (xhr.status === 200) {                  console.log(xhr);                if(typeof callback == 'function') callback(e,file,xhr.responseText);            } else {                  alert("Error "+ xhr.statusText);              }            }          };          // Set headers        //xhr.setRequestHeader("Content-Type", "multipart/form-data");        xhr.setRequestHeader("Content-Type", file.type);        xhr.setRequestHeader("X-File-Name", encodeURIComponent(file.name));        xhr.setRequestHeader("X-File-Size", file.size);        xhr.setRequestHeader("X-File-Type", file.type);        console.log(file);        // Send the file (doh)        xhr.send(file);    }else{        alert("Your browser doesnt support FileReader object");    }}EZ.dragbox = function(o){    var self=this    ,opt={}    ,reader    ,xhr    ,emptyFN = function(e){        }    ,_default = function(e){        e.stopPropagation();        e.preventDefault();    }    ,dragenter = function(e){        console.log('dragenter');        if(typeof opt.dragenter=='function') opt.dragenter(e);        _default(e);    }    ,dragover = function(e){        console.log('dragover');        if(typeof opt.dragover=='function') opt.dragover(e);        _default(e);    }    ,dragleave = function(e){        console.log('dragleave');        if(typeof opt.dragleave=='function') opt.dragleave(e);        _default(e);    }    ,drop = function(e){        console.log('drop');        _default(e);        var dt = e.dataTransfer;        var files = dt.files;        if(typeof opt.dragenter=='function') opt.drop(e,files,opt);    }    ;        if(!o) o = {};    if(typeof o.render=='string') opt.dropbox = document.getElementById(o.render);    else opt.dropbox=o.render;    opt.url = o.url;    opt.dragenter = o.dragenter || emptyFN;    opt.dragover = o.dragover || emptyFN;    opt.dragleave = o.dragleave || emptyFN;    opt.drop = o.drop || drop;    opt.onload = o.onload || emptyFN;    opt.progress = o.progress || emptyFN;    opt.callback = o.callback || emptyFN;        opt.dropbox.removeEventListener('dragenter',dragenter,false);    opt.dropbox.removeEventListener('dragleave',dragleave,false);    opt.dropbox.removeEventListener('dragover',dragover,false);    opt.dropbox.removeEventListener('drop',drop,false);        opt.dropbox.addEventListener('dragenter',dragenter,false);    opt.dropbox.addEventListener('dragleave',dragleave,false);    opt.dropbox.addEventListener('dragover',dragover,false);    opt.dropbox.addEventListener('drop',drop,false);    };function toggle(){    //var main_nav = document.getElementById('main-nav');    //var page_wrap = document.getElementById('page-wrap');    if($('#nav').hasClass('menu-expand')){        $('#nav').removeClass('menu-expand');        $('#page-wrap').removeClass('page-wrap-expand');        $('#header').removeClass('main-header-expand');    }else{        $('#nav').addClass('menu-expand');        $('#page-wrap').addClass('page-wrap-expand');        $('#header').addClass('main-header-expand');    }        }function removeMask(){    $(document.body).removeClass('css3loadmask');    document.body.removeChild(document.getElementById('spinner'));}